var request = require('supertest');
var expect = require('expect.js');
var Backdrop = require('../lib/backdrop');
var fs = require('fs');
var rimraf = require('rimraf');

describe('Backdrop', function() {
  var subject = new Backdrop();

  beforeEach(function() {
    rimraf.sync('tmp/backdrop');
  });

  describe('#load', function() {
    it('builds the JSON at the correct path', function() {
      subject.load({'some':'json'}, '/something');

      expected = fs.readFileSync('tmp/backdrop/something.json');
      expect(expected.toString()).to.equal('{"some":"json"}');
    });

    it('renders the fixture as JSON', function(done) {
      subject.load({'some':'json'}, '/something');

      request(subject.app).get('/something')
        .expect(200)
        .expect('{"some":"json"}', done);
    });
  });

  describe('#status', function() {
    it('writes the supplied HTTP code to the status file', function() {
      subject.status(500, '/something');
      expected = fs.readFileSync('tmp/backdrop/something.code');
      expect(expected.toString()).to.equal('500');
    });

    it('reponds with the HTTP code', function(done) {
      subject.status(500, '/something');

      request(subject.app).get('/something')
        .expect(500, done);
    });
  });

  describe('requesting a missing fixture', function() {

    it('sends a 404 if the file does not exist', function(done) {
      request(subject.app).get('/something_else')
        .expect(404, done);
    });
  });

});
