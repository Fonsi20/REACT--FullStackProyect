{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Stagair\\\\Desktop\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Stagair\\\\Desktop\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Stagair\\\\Desktop\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Stagair\\\\Desktop\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Stagair\\\\Desktop\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Stagair\\\\Desktop\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stagair\\\\Desktop\\\\fullstack_app\\\\client\\\\src\\\\table.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\n/*let counter = 0;\r\nfunction createData(id, brand, model, color, fuel_type, engine_volume, traction, price) {\r\n  counter += 1;\r\n  return { info: id, brand, model, color, fuel_type, engine_volume, traction, price };\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\n*/\n\nvar rows = [{\n  id: 'Id',\n  numeric: true,\n  disablePadding: true,\n  label: 'ID'\n}, {\n  id: 'Brand',\n  numeric: false,\n  disablePadding: false,\n  label: 'Brand'\n}, {\n  id: 'Model',\n  numeric: false,\n  disablePadding: false,\n  label: 'Model'\n}, {\n  id: 'Color',\n  numeric: false,\n  disablePadding: false,\n  label: 'Color'\n}, {\n  id: 'Fuel Type',\n  numeric: false,\n  disablePadding: false,\n  label: 'Fuel Type'\n}, {\n  id: 'Engine Volume',\n  numeric: false,\n  disablePadding: false,\n  label: 'Engine Volume'\n}, {\n  id: 'Traction',\n  numeric: false,\n  disablePadding: false,\n  label: 'Traction'\n}, {\n  id: 'Price',\n  numeric: false,\n  disablePadding: false,\n  label: 'Price'\n}];\n\nvar EnhancedTableHead =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EnhancedTableHead, _React$Component);\n\n  function EnhancedTableHead() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EnhancedTableHead);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EnhancedTableHead)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.createSortHandler = function (property) {\n      return function (event) {\n        _this.props.onRequestSort(event, property);\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(EnhancedTableHead, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onSelectAllClick = _this$props.onSelectAllClick,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy,\n          numSelected = _this$props.numSelected,\n          rowCount = _this$props.rowCount;\n      return React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        indeterminate: numSelected > 0 && numSelected < rowCount,\n        checked: numSelected === rowCount,\n        onChange: onSelectAllClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), rows.map(function (row) {\n        return React.createElement(TableCell, {\n          key: row.id,\n          align: row.numeric ? 'center' : 'center',\n          padding: row.disablePadding ? 'none' : 'default',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"Sort\",\n          placement: row.numeric ? 'bottom-end' : 'bottom-start',\n          enterDelay: 300,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(TableSortLabel, {\n          direction: order,\n          onClick: _this2.createSortHandler(row.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, row.label)));\n      }, this)));\n    }\n  }]);\n\n  return EnhancedTableHead;\n}(React.Component);\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nvar toolbarStyles = function toolbarStyles(theme) {\n  return {\n    root: {\n      paddingRight: theme.spacing.unit\n    },\n    highlight: theme.palette.type === 'light' ? {\n      color: theme.palette.secondary.main,\n      backgroundColor: lighten(theme.palette.secondary.light, 0)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    spacer: {\n      flex: '1 1 100%'\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: '0 0 auto'\n    }\n  };\n};\n\nvar EnhancedTableToolbar = function EnhancedTableToolbar(props) {\n  var numSelected = props.numSelected,\n      classes = props.classes;\n  return React.createElement(Toolbar, {\n    className: classNames(classes.root, _defineProperty({}, classes.highlight, numSelected > 0)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"List of Cars\")), React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }))) : React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(FilterListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired\n};\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3\n    },\n    table: {\n      minWidth: 1020\n    },\n    tableWrapper: {\n      overflowX: 'auto'\n    }\n  };\n};\n\nvar EnhancedTable =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(EnhancedTable, _React$Component2);\n\n  function EnhancedTable() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, EnhancedTable);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(EnhancedTable)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this3.state = {\n      order: 'asc',\n      orderBy: 'id',\n      selected: [],\n      data: [],\n      page: 0,\n      rowsPerPage: 5\n    };\n\n    _this3.handleSelectAllClick = function (event) {\n      if (event.target.checked) {\n        _this3.setState(function (state) {\n          return {\n            selected: state.data.map(function (n) {\n              return n.id;\n            })\n          };\n        });\n\n        return;\n      }\n\n      _this3.setState({\n        selected: []\n      });\n    };\n\n    _this3.handleClick = function (event, id) {\n      var selected = _this3.state.selected;\n      var selectedIndex = selected.indexOf(id);\n      var newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      _this3.setState({\n        selected: newSelected\n      });\n    };\n\n    _this3.handleChangePage = function (event, page) {\n      _this3.setState({\n        page: page\n      });\n    };\n\n    _this3.handleChangeRowsPerPage = function (event) {\n      _this3.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    _this3.isSelected = function (id) {\n      return _this3.state.selected.indexOf(id) !== -1;\n    };\n\n    return _this3;\n  }\n\n  _createClass(EnhancedTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          data = _this$state.data,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          selected = _this$state.selected,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n      var emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n      return React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(EnhancedTableToolbar, {\n        numSelected: selected.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Table, {\n        \"aria-labelledby\": \"tableTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(EnhancedTableHead, {\n        numSelected: selected.length,\n        onSelectAllClick: this.handleSelectAllClick,\n        onRequestSort: this.handleRequestSort,\n        rowCount: this.props.info.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (n) {\n        var isSelected = _this4.isSelected(n.id);\n\n        return React.createElement(TableRow, {\n          hover: true,\n          onClick: function onClick(event) {\n            return _this4.handleClick(event, n.id);\n          },\n          role: \"checkbox\",\n          \"aria-checked\": isSelected,\n          tabIndex: -1,\n          key: n.id,\n          selected: isSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          padding: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: isSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        })), React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          padding: \"none\",\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, n.id), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, n.brand), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, n.model), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, n.color), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, n.fuel_type), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, n.engine_volume), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, n.traction), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, n.price));\n      }), emptyRows > 0 && React.createElement(TableRow, {\n        style: {\n          height: 49 * emptyRows\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }))))), React.createElement(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: data.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EnhancedTable;\n}(React.Component);\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  optionalArray: PropTypes.array,\n  optionalBool: PropTypes.bool,\n  optionalFunc: PropTypes.func,\n  optionalNumber: PropTypes.number,\n  optionalObject: PropTypes.object,\n  optionalString: PropTypes.string,\n  optionalSymbol: PropTypes.symbol\n};\nexport default withStyles(styles)(EnhancedTable);\nexport { EnhancedTable, EnhancedTableHead };","map":{"version":3,"sources":["C:\\Users\\Stagair\\Desktop\\fullstack_app\\client\\src\\table.js"],"names":["React","classNames","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","lighten","rows","id","numeric","disablePadding","label","EnhancedTableHead","createSortHandler","property","event","props","onRequestSort","onSelectAllClick","order","orderBy","numSelected","rowCount","map","row","Component","propTypes","number","isRequired","func","string","toolbarStyles","theme","root","paddingRight","spacing","unit","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar","classes","object","styles","width","marginTop","table","minWidth","tableWrapper","overflowX","EnhancedTable","state","selected","data","page","rowsPerPage","handleSelectAllClick","target","checked","setState","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","handleChangeRowsPerPage","value","isSelected","emptyRows","Math","min","handleRequestSort","info","brand","model","fuel_type","engine_volume","traction","price","height","optionalArray","array","optionalBool","bool","optionalFunc","optionalNumber","optionalObject","optionalString","optionalSymbol","symbol"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\n\r\n\r\n/*let counter = 0;\r\nfunction createData(id, brand, model, color, fuel_type, engine_volume, traction, price) {\r\n  counter += 1;\r\n  return { info: id, brand, model, color, fuel_type, engine_volume, traction, price };\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\n*/\r\n\r\nconst rows = [\r\n  { id: 'Id', numeric: true, disablePadding: true, label: 'ID' },\r\n  { id: 'Brand', numeric: false, disablePadding: false, label: 'Brand' },\r\n  { id: 'Model', numeric: false, disablePadding: false, label: 'Model' },\r\n  { id: 'Color', numeric: false, disablePadding: false, label: 'Color' },\r\n  { id: 'Fuel Type', numeric: false, disablePadding: false, label: 'Fuel Type' },\r\n  { id: 'Engine Volume', numeric: false, disablePadding: false, label: 'Engine Volume' },\r\n  { id: 'Traction', numeric: false, disablePadding: false, label: 'Traction' },\r\n  { id: 'Price', numeric: false, disablePadding: false, label: 'Price' },\r\n];\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'center' : 'center'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected, classes } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"textSecondary\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n            <Typography variant=\"h6\" id=\"tableTitle\">\r\n              List of Cars\r\n          </Typography>\r\n          )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n            <Tooltip title=\"Filter list\">\r\n              <IconButton aria-label=\"Filter list\">\r\n                <FilterListIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n});\r\n\r\nclass EnhancedTable extends React.Component {\r\n  state = {\r\n    order: 'asc',\r\n    orderBy: 'id',\r\n    selected: [],\r\n    data: [],\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  render() {\r\n    const {data, order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n\r\n    return (\r\n      <Paper>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <div>\r\n          <Table aria-labelledby=\"tableTitle\">\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={this.props.info.length}\r\n            />\r\n            <TableBody>\r\n              {slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  const isSelected = this.isSelected(n.id);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => this.handleClick(event, n.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.id}\r\n                      selected={isSelected}\r\n                    >\r\n\r\n                    \r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\" align=\"center\">\r\n                        {n.id}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{n.brand}</TableCell>\r\n                      <TableCell align=\"center\">{n.model}</TableCell>\r\n                      <TableCell align=\"center\">{n.color}</TableCell>\r\n                      <TableCell align=\"center\">{n.fuel_type}</TableCell>\r\n                      <TableCell align=\"center\">{n.engine_volume}</TableCell>\r\n                      <TableCell align=\"center\">{n.traction}</TableCell>\r\n                      <TableCell align=\"center\">{n.price}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  optionalArray: PropTypes.array,\r\n  optionalBool: PropTypes.bool,\r\n  optionalFunc: PropTypes.func,\r\n  optionalNumber: PropTypes.number,\r\n  optionalObject: PropTypes.object,\r\n  optionalString: PropTypes.string,\r\n  optionalSymbol: PropTypes.symbol,\r\n};\r\n\r\nexport default withStyles(styles)(EnhancedTable);\r\nexport { EnhancedTable, EnhancedTableHead, };"]},"metadata":{},"sourceType":"module"}